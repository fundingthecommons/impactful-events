# Since the ".env" file is gitignored, you can use the ".env.example" file to
# build a new ".env" file when you clone the repo. Keep this file up-to-date
# when you add new variables to `.env`.

# This file will be committed to version control, so make sure not to have any
# secrets in it. If you are cloning this repo, create a copy of this file named
# ".env" and populate it with your secrets.

# When adding additional environment variables, the schema in "/src/env.js"
# should be updated accordingly.

# Next Auth
# You can generate a new secret on the command line with:
# npx auth secret
# https://next-auth.js.org/configuration/options#secret
AUTH_SECRET=""

# Next Auth Discord Provider
AUTH_DISCORD_ID=""
AUTH_DISCORD_SECRET=""

# Next Auth Google Provider
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""

# Prisma
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
DATABASE_URL="postgresql://postgres:password@localhost:5432/ftc-t3"

  # In your .env file, set:
  EMAIL_MODE=staging  # For test mode with redirects
  # or
  EMAIL_MODE=development  # For dev mode

  # Also ensure you have:
  TEST_EMAIL_OVERRIDE=
  RESIDENCY_TELEGRAM_URL=""

# OpenAI API for AutoScore feature
OPENAI_API_KEY=""

ADMIN_EMAIL=

# Anonymization secret for analytics system (generate with: openssl rand -hex 32)
ANONYMIZATION_SECRET=""

# Sentry Error Monitoring
# Get these from https://sentry.io/ after creating a project
SENTRY_DSN=""
NEXT_PUBLIC_SENTRY_DSN=""
SENTRY_AUTH_TOKEN=""

# Vercel Blob Storage
# Automatically configured on Vercel, set manually for local testing
# Get from: https://vercel.com/dashboard/stores
BLOB_READ_WRITE_TOKEN=""